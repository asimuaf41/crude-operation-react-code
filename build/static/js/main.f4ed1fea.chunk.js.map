{"version":3,"sources":["reducers/menu_reducer.js","reducers/user_reducer.js","reducers/index.js","store/index.js","components/header.js","components/footer.js","components/about.js","actions/user_action.js","template/time.js","components/add.js","components/user.js","actions/menu_Action.js","components/menu_detail.js","App.js","serviceWorker.js","index.js","image/me.jpg"],"names":["menuReducer","state","arguments","length","undefined","action","type","Object","toConsumableArray","concat","payload","filter","item","userReducer","_id","name","email","balance","time","user","newUser","rootReducer","combineReducers","store","createStore","Header","react_default","a","createElement","Navbar","inverse","collapseOnSelect","Brand","Link","className","to","Toggle","Collapse","Nav","pullRight","NavItem","eventKey","React","Component","Footer","About","src","me","add_user","remove_user","updateUser","updated_user","now","Date","theHr","getHours","theMin","getMinutes","getDate","getMonth","getFullYear","Add","handle_submit","_this","textInput","value","textInput1","textInput2","options","method","body","JSON","stringify","headers","Content-Type","fetch","then","res","json","console","log","props","dispatch","data","handle_remove","event","input","_this2","this","FormGroup","FormControl","componentClass","inputRef","required","placeholder","ButtonToolbar","Button","onClick","connect","User","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","delete_user","user_id","text","click_edit","setState","userToUpdate","handleShow","updateUserInServer","update_user","show","bind","assertThisInitialized","handleClose","update","catch","error","_this3","users","map","key","defineProperty","Route","path","component","Modal","onHide","closeButton","Title","Body","Form","horizontal","controlId","Col","sm","defaultValue","bsStyle","class","Table","responsive","AddItem","menu_item","removeItem","Menu_detail","selected_item","ref","ListGroup","menu","index","ListGroupItem","App","es","BrowserRouter","header","exact","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f4ed1fea.chunk.js","sourcesContent":["const menuReducer=(state=[\"Biryani\", \"Salad\", \"Ice Cream\",\"cold drink\",\"chawal\"],action)=>{\r\n   \r\n    switch(action.type){\r\n        case \"Add_Item\":\r\n          return [...state, action.payload ]\r\n        case \"REMOVE_ITEM\":\r\n          return state.filter((item)=>{return item !== action.payload})\r\n        default:\r\n          return state\r\n        \r\n    }\r\n}\r\nexport default menuReducer;","const userReducer=(state=[{_id:\"2015-ag-5534\",name:\"asim g\",email:'asimuaf41@gmail.com',balance:500,time:'12:18 AM'}],action)=>{\r\n    switch(action.type){\r\n        case \"SET_USERS\":\r\n          return action.payload\r\n        case \"ADD_USER\":\r\n          return [action.payload , ...state]\r\n        case \"DELETE_USER\":\r\n          return  state.filter((user)=>{return user._id !== action.payload}) \r\n        case \"UPDATE_USER\":\r\n           var newUser= state.filter((user)=>{return user._id!==action.payload._id})\r\n           return [action.payload,...newUser]\r\n        default:\r\n          return state\r\n    }\r\n    \r\n}\r\nexport default userReducer;\r\n/*  var remainingUser=state.splice(action.payload._id,1);\r\n          var newUser=remainingUser.splice(action.payload._id,0,action.payload);\r\n          return newUser */","import {combineReducers} from 'redux';\r\nimport menuReducer from './menu_reducer';\r\nimport userReducer from './user_reducer';\r\nconst rootReducer=combineReducers({\r\n    menuReducer,userReducer\r\n});\r\nexport default rootReducer;","import React, { Component } from 'react';\r\nimport {createStore} from \"redux\";\r\nimport rootReducer from '../reducers/index';\r\nconst store=createStore(rootReducer); \r\nexport default store;","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router,Route, Link,Switch} from 'react-router-dom'; \r\n\r\nimport { Navbar, NavItem, NavDropdown, MenuItem, Nav, Form, FormGroup, Col, FormControl, Checkbox, Button, ControlLabel } from 'react-bootstrap';\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n      return(\r\n        <div>\r\n        \r\n       \r\n       <div>\r\n          <Navbar inverse collapseOnSelect>\r\n    <Navbar.Header>\r\n      <Navbar.Brand>\r\n        \r\n        <Link className=\"logo-items\" to=\"/dashboard\">My Resturaunt</Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle />\r\n    </Navbar.Header>\r\n    <Navbar.Collapse>\r\n      <Nav>\r\n        \r\n      </Nav>\r\n      <Nav pullRight>\r\n      <NavItem  eventKey={1} >\r\n         <Link className=\"item\"  to=\"/\">Home</Link>\r\n        </NavItem>\r\n        <NavItem  eventKey={2} >\r\n        <Link className=\"item\" to=\"/User\">Users</Link> \r\n              </NavItem>\r\n        <NavItem eventKey={3} >\r\n        <Link className=\"item\" to=\"/About\">About</Link> \r\n        </NavItem>\r\n       \r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n         </div>\r\n         \r\n       \r\n\r\n       </div>\r\n      )\r\n    }\r\n  }\r\n  export default Header","import React, { Component } from 'react';\r\nclass Footer extends Component{ \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"footer\">&copy; copyWrite 2018</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Footer","import React, { Component } from 'react';\r\nimport me from '../image/me.jpg';\r\nclass About extends Component{ \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"content\">\r\n                \r\n                <div className=\"mypic\">\r\n                <center><img src={me} /></center>\r\n                 \r\n                 <center>Muhammad Asim</center>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default About;","const setUsers = ( users ) => {\r\n    return { type: \"SET_USERS\", payload: users }\r\n}\r\nconst add_user=(user)=>{\r\n\r\n return {type:\"ADD_USER\",payload:user}\r\n\r\n}\r\nconst remove_user=(user)=>{\r\n    return {type:\"DELETE_USER\",payload:user}\r\n}\r\nconst updateUser=(updated_user)=>{\r\n    return { type: \"UPDATE_USER\", payload: updated_user } \r\n}\r\nexport {add_user, remove_user,setUsers,updateUser}","var now = new Date();\r\nvar theHr = now.getHours();\r\nvar theMin = now.getMinutes();\r\nvar thedate=now.getDate();\r\nvar themonth=now.getMonth();\r\nvar months=[\"jun\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"]\r\nvar monthname=months[themonth];\r\nvar theyear=now.getFullYear();\r\nif(theHr>12)\r\n{\r\n    theHr=theHr-12 + \":\" + theMin+\" PM\";\r\n}\r\nelse{\r\n    theHr=theHr+ \":\" + theMin+\" AM\"\r\n}\r\nvar time= theHr+\" \"+thedate+\"-\"+monthname+\"-\"+theyear;\r\nexport {time}","import React, { Component } from 'react';\r\nimport {add_user,remove_user} from '../actions/user_action';\r\nimport {Form,FormGroup,Button,ButtonToolbar, FormControl,ControlLabel,ListGroup,ListGroupItem} from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport {time} from '../template/time';\r\nclass Add extends Component{\r\n\r\n    handle_submit=()=>{\r\n        var user_name =this.textInput.value;\r\n        var user_email =this.textInput1.value;\r\n        var user_balance =this.textInput2.value;\r\n       \r\n      let user={\r\n          name:user_name,\r\n          email:user_email,\r\n          balance:user_balance,\r\n          time:time\r\n      }\r\n      \r\n      var options = {\r\n        method: 'POST',\r\n        body: JSON.stringify(user),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      }\r\n      fetch('http://localhost:8000/addUser',options)\r\n      .then((res)=>res.json())\r\n      .then((json)=>{\r\n          console.log(json)\r\n          this.props.dispatch(add_user(json.data))\r\n      })\r\n       \r\n       \r\n    }\r\n    handle_remove=(event)=>{\r\n        var user =this.input.value;\r\n        \r\n        this.props.dispatch(remove_user(user))\r\n       \r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"add_content\">\r\n             <div className=\"add_form\">\r\n             <center>\r\n             <div className=\"menu_manage\">\r\n                 \r\n                              \r\n                  <FormGroup>\r\n                     <p className=\"add_heading\">Add user</p>\r\n                     <FormControl  type=\"text\" componentClass=\"input\" inputRef={input=>this.textInput=input}  required=\"true\"   placeholder=\"Enter the user name here\" />\r\n                 </FormGroup>{' '}\r\n                 <FormGroup>\r\n                 <FormControl  type=\"email\" componentClass=\"input\"  inputRef={input=>this.textInput1=input} required=\"true\"   placeholder=\"Enter the user email here\" />\r\n                 </FormGroup>\r\n\r\n                 <FormGroup>\r\n                 <FormControl  type=\"number\" componentClass=\"input\"  inputRef={input=>this.textInput2=input} required=\"true\"    placeholder=\"Enter the user balance here\" />\r\n                 </FormGroup>\r\n                 <ButtonToolbar>\r\n                     {/* Standard button */}\r\n                     <Button type=\"submit\" onClick={this.handle_submit}>Add user</Button>\r\n\r\n                   \r\n                     </ButtonToolbar>\r\n                     \r\n                     \r\n              </div>\r\n              </center>\r\n             </div>\r\n            </div>\r\n        );\r\n    }\r\n} \r\n\r\nexport default connect()(Add);","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router,Route, Link,Switch} from 'react-router-dom'; \r\n\r\nimport {  Table,Button,Modal,Form,FormGroup,Col,FormControl} from 'react-bootstrap';\r\nimport Add from './add';\r\nimport {connect} from 'react-redux';\r\nimport {setUsers,remove_user,updateUser} from '../actions/user_action';\r\nimport {time} from '../template/time';\r\nclass User extends Component{ \r\n    constructor(props, context) {\r\n        super(props, context);\r\n    \r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    \r\n        this.state = {\r\n          show: false,\r\n          update:'',\r\n          userToUpdate: {}\r\n        };\r\n      }\r\n\r\n      handleClose() {\r\n        this.setState({ show: false });\r\n      }\r\n    \r\n      handleShow() {\r\n        this.setState({ show: true });\r\n      }\r\n     \r\n    componentDidMount(){\r\n        fetch('http://localhost:8000/getAllUsers')\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json)\r\n        this.props.dispatch(setUsers(json.data))\r\n      })\r\n      .catch((error) => console.log(error))\r\n  \r\n    }\r\n    delete_user=(user_id)=>{\r\n       \r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(),\r\n            headers: { 'Content-Type': 'application/json' }\r\n          }\r\n          fetch('http://localhost:8000/deleteUser/'+user_id,options)\r\n          .then((res)=>res.text())\r\n          .then((json)=>{\r\n              console.log(json)\r\n            \r\n              this.props.dispatch(remove_user(user_id))\r\n          })\r\n           \r\n    }\r\n    click_edit=(user)=>{\r\n        this.setState({userToUpdate: user})\r\n        this.handleShow();\r\n        \r\n    }\r\n\r\n    updateUserInServer = (user_id) => {\r\n        var name=this.name.value;\r\n        var email=this.email.value;\r\n        var balance=this.balance.value;\r\n       \r\n        let update_user={\r\n            name:name,\r\n            email:email,\r\n            balance:balance,\r\n            time:time\r\n        }\r\n        var options = {\r\n        method: 'POST',\r\n        body: JSON.stringify(update_user),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      }\r\n      fetch('http://localhost:8000/updateUser'+user_id,options)\r\n      .then((res)=>res.json())\r\n      .then((json)=>{\r\n          console.log(json)\r\n        this.props.dispatch(updateUser(json.data)); \r\n      }) \r\n      this.setState({ show: false });\r\n    }\r\n\r\n    render(){\r\n        let users=this.props.users.map((user)=>{\r\n            return <tr key={user._id}>\r\n            <td>{user._id}</td> \r\n             <td>{user.name}</td>\r\n             <td>{user.email}</td>\r\n             <td>{user.balance}</td>\r\n             <td>{user.time}</td>\r\n             <td>\r\n                 <button type=\"submit\" onClick={this.delete_user.bind(this,user._id)} className=\"button_design\">delete</button>\r\n                     <button type=\"submit\" className=\"action_button\"  onClick={this.click_edit.bind(this,user)} className=\"button_design1\">update</button>\r\n                    \r\n              </td>\r\n            </tr>\r\n        })\r\n        return(\r\n            <div>\r\n                <div className=\"user_detail\">\r\n                <div className=\"add_button\">\r\n                 \r\n                 <Link to=\"/User/Add\"  className=\"add_design\">Add user</Link>  \r\n                 \r\n                     <Route path=\"/User/Add\" component={Add} />\r\n                    \r\n                </div>\r\n                <div>\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>update user</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n             \r\n            <Form horizontal>\r\n                <FormGroup  controlId=\"formHorizontal\">\r\n                    <Col className=\"title3\"  sm={2}>\r\n                    Name\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                    <FormControl type=\"text\"   componentClass=\"input\"  inputRef={input=>this.name=input}   defaultValue={this.state.userToUpdate.name}   />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup controlId=\"formHorizontalEmail\">\r\n                    <Col className=\"title3\" sm={2}>\r\n                    email\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                    <FormControl  type=\"text\"  componentClass=\"input\" inputRef={input=>this.email=input} defaultValue={this.state.userToUpdate.email}  />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup controlId=\"formHorizontalEmail\">\r\n                    <Col className=\"title3\" sm={2}>\r\n                    balance\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                    <FormControl type=\"text\"  componentClass=\"input\" inputRef={input=>this.balance=input} defaultValue={this.state.userToUpdate.balance} />\r\n                    </Col>\r\n                </FormGroup>\r\n\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n           \r\n           \r\n             <Button bsStyle=\"primary\" onClick={this.updateUserInServer.bind(this,this.state.userToUpdate._id)}>update user</Button>\r\n              <Button onClick={this.handleClose}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n                </div>\r\n                <div className=\"add_user\">\r\n                  \r\n                </div>\r\n                <center>\r\n                <div className=\"user_info\">\r\n                <p><i class=\"glyphicon glyphicon-user\"></i><span> Users</span></p>\r\n                <Table responsive>\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"table_heading\">Account#</th>\r\n                        <th className=\"table_heading\">Name</th>\r\n                        <th className=\"table_heading\">email address</th>\r\n                        <th className=\"table_heading\">Balance</th>\r\n                        <th className=\"table_heading\">Time</th>\r\n                        <th className=\"table_heading\">modification</th>\r\n                        \r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                     {users}\r\n                     \r\n                    </tbody>\r\n                  </Table>\r\n                </div>        \r\n                </center>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n      users: store.userReducer\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps)(User);","const AddItem=(menu_item)=>{\r\n    return {type:\"Add_Item\", payload: menu_item}\r\n}\r\nconst removeItem = ( menu_item ) => {\r\n    return { type: \"REMOVE_ITEM\", payload: menu_item }\r\n}\r\n\r\nexport { AddItem, removeItem }","import React, { Component } from 'react';\r\n\r\nimport {Form,FormGroup,Button,ButtonToolbar, FormControl,ControlLabel,ListGroup,ListGroupItem} from 'react-bootstrap';\r\nimport {AddItem,removeItem} from '../actions/menu_Action';\r\nimport {connect} from 'react-redux';\r\nclass Menu_detail extends Component{ \r\n    state={\r\n        \r\n        selected_item:'Nothing'\r\n       \r\n    };\r\n\r\n    handle_submit=()=>{\r\n       \r\n        let menu_item=this.input.value;\r\n        \r\n         this.props.dispatch(AddItem(menu_item))\r\n     }\r\n     handle_remove=(event)=>{\r\n\r\n        let menu_item=this.input.value;       \r\n        this.props.dispatch( removeItem(menu_item))\r\n       \r\n     }\r\n     \r\n    render(){\r\n        \r\n\r\n        return(\r\n            <div>\r\n               <center>\r\n                \r\n                 <div className=\"menu_manage\">\r\n                 \r\n                 \r\n                    <FormGroup>\r\n                        <p className=\"add_heading\">Add Items</p>\r\n                        <FormControl  type=\"text\" componentClass=\"input\" inputRef={(ref) => {this.input = ref}}    placeholder=\"Enter the item name here\" />\r\n                    </FormGroup>{' '}\r\n                    \r\n                    <ButtonToolbar>\r\n                        {/* Standard button */}\r\n                        <Button onClick={this.handle_submit}>Add Item</Button>\r\n\r\n                       {/* Indicates a dangerous or potentially negative action */}\r\n                      <Button onClick={this.handle_remove} bsStyle=\"danger\">Remove Item</Button>\r\n                        </ButtonToolbar>\r\n                   \r\n                 </div>\r\n                 <div className=\"container5\">\r\n                 <div className=\"Menu_detail\">\r\n                 <p className=\"menu_heading\">\r\n                   User menu details is given below:\r\n                 </p>\r\n                 <ListGroup>\r\n                  {\r\n                      this.props.menu.map((value,index)=>{\r\n                          return <ListGroupItem className=\"menu\" onClick={()=>{this.setState({selected_item:value})}} key={index}>{value}</ListGroupItem>\r\n                      })\r\n                  }   \r\n               \r\n                </ListGroup>\r\n                 </div>\r\n                 <div className=\"select_item\">\r\n                 <p className=\"selected_heading\">selected Item:</p>\r\n               \r\n                <ListGroup>\r\n                <ListGroupItem>{this.state.selected_item}</ListGroupItem>\r\n                <ListGroupItem>Item 2</ListGroupItem>\r\n                <ListGroupItem>...</ListGroupItem>\r\n                </ListGroup>\r\n                 </div>\r\n                </div>\r\n                </center>\r\n               \r\n            </div>\r\n        );\r\n    }\r\n  \r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n       menu:state.menuReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Menu_detail);","import React, { Component } from 'react';\nimport './App.css';\nimport provider, {Provider} from 'react-redux';\nimport store from './store/index';\nimport Header from './components/header';\nimport Footer from './components/footer';\n\nimport About from './components/about';\nimport User from './components/user';\nimport Menu_detail from './components/menu_detail';\nimport {BrowserRouter as Router,Route, Link,Switch} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n     <Provider store={store}>\n      <div className=\"App\">\n        \n        \n         <Router>\n                <div className=\"content\">\n                <Header />\n                <switch>\n                \n                <Route path=\"/about\" component={About} />\n                <Route path=\"/User\" component={User} />\n                <Route exact path=\"/\" component={Menu_detail} />\n                \n                </switch>\n                \n                </div>\n                </Router>\n         <Footer /> \n      </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/me.76f7db94.jpg\";"],"sourceRoot":""}